name = "skyscheduler"
main = "src/index.tsx"
compatibility_date = "2024-12-13"
compatibility_flags = [ "nodejs_compat" ]
send_metrics = false
# turn off preview urls to lower confusion
preview_urls = false
# File assets
assets = { run_worker_first = false, directory = "./assets/", not_found_handling = "single-page-application" }

# Website Domain
routes = [{ pattern = "skyscheduler.work", custom_domain = true }]

# KV Data
kv_namespaces = [
  { binding = "KV", id = "0ecd892014ac47eea38c72be94586e7b" }, # Redis for sessions
  { binding = "INVITE_POOL", id = "45e1cff45cad45c28b22c4fbcd30db00" } # Invite key pool
]

[limits]
cpu_ms = 90 # this is overkill. In one instance have we ever hit like 60ms, we're usually floating at less than 15ms (for cryptography)

[observability]
enabled = true
head_sampling_rate = 1

[[d1_databases]]
binding = "DB"
database_name = "skyposts"
database_id = "5553e724-4dfb-4771-9c08-3584da5855d1"
migrations_table = "migrations"
migrations_dir = "migrations"

[[r2_buckets]]
binding = "R2"
bucket_name = "skyembeds"

[images]
binding = "IMAGES"

[triggers]
# Schedule cron triggers at the start of every hour and ~5:30pm on sunday for big cleanups:
crons = [ "0 * * * *", "30 17 * * sun" ]

# flags required to run wrangler in linux
[dev]
ip = "127.0.0.1"

[vars]
# the domain and protocol that this application is hosted on. note this value is also used for CORS
BETTER_AUTH_URL="https://skyscheduler.work"

# If we should use cf image transforms
USE_IMAGE_TRANSFORMS=true

# how many image quality steps should we attempt
MAX_IMAGE_QUALITY_STEPS=6

# how much should the image quality go down per steps
IMAGE_DEGRADE_PER_STEP=5

# Should we use turnstile captchas?
USE_TURNSTILE_CAPTCHA=true

# Enforce bsky image dimensions (possible failure for resizes)
USE_BSKY_IMAGE_DIMENSIONS=false

# link to invite threads
INVITE_THREAD="https://bsky.app/profile/skyscheduler.work/post/3ltsfnzdmkk2l"